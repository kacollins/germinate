version: '3'

services:
#container for rust web server
  web:
    build:
      context: .
      dockerfile: docker/app/Dockerfile.dev
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./:/app
    container_name: {{ app_name }}_rs_web_server
    
{{#if database}}
    depends_on:
      - db
      - db_test
{{/if}}

{{#if postgres}}
# container for postgres database
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: dbuser
      POSTGRES_DB: database
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data

# container for postgres test database
  db_test:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: dbuser
      POSTGRES_DB: database_test
    ports:
      - 5433:5432
    volumes:
      - database_test:/var/lib/postgresql/data
{{/if}}

{{#if mongo}}
#container for mongo database
  db:
    image: mongo:4.4.6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - database:/data/db

#container for mongo test database
  db_test:
    image: mongo:4.4.6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27018:27017
    volumes:
      - database_test:/data/db
{{/if}}

{{#if sqlite}}
#container for sqlite database
  db:
    image: keinos/sqlite3:latest
    restart: always
    ports:
      - 5432:5432
    volumes:
      - database:/db

#container for sqlite test database
  db_test:
    image: keinos/sqlite3:latest
    restart: always
    ports:
      - 5433:5432
    volumes:
      - database_test:/db
{{/if}}

{{#if database}}
volumes:
  database:
  database_test:
{{/if}}
